#GIT COMMANDS
# simple aliases
# alias gibr='git branch';
alias gime='git merge master';
alias gipu='git pull';  #down <==
alias gist='git status';

# complex aliases
# git upstream
giup () {
    #If first variable is null, don't go forward
    if [[ -z "$1" ]]; then
        echo "COMMAND INVALID! MUST HAVE AT LEAST ONE VARIABLE!";
    else
        #If second variable is null
        if [[ -z "$2" ]]; then
            #Set the second variable equal to the first one
            set $1 $1;
        fi
        git branch --set-upstream-to=origin/$1 $2;
    fi
}
# git checkout
gico () {
    #If first variable is null, checkout master.
    if [[ -z "$1" ]]; then
        git checkout master;
        git pull;
    else
        git checkout $1;
    fi
}

# git diff
# COLOR FIXED
# SUBFUNCTIONS FIXED
# LOCAL VARIABLES FIXED
# PRINT COMMAND FIXED
# COMMENTS @TODO
gidf () {
    local action='diff';
    local pointer='';

    if [[ -n "$1" ]]; then
        pointer=$(__gi_file_extension_modifier $1);
    fi

    __gi_print_execute;
}

# git add
# COLOR FIXED
# SUBFUNCTIONS FIXED
# LOCAL VARIABLES FIXED
# PRINT COMMAND FIXED
# COMMENTS @TODO
giad () {
    local action='add';
    local pointer='';

    if [[ -n "$1" ]]; then
        pointer=$(__gi_file_extension_modifier $1);
    else
        echo "COMMAND INVALID! MUST HAVE AT LEAST ONE VARIABLE!";
    fi

    __gi_print_execute;
}

# git push #up   ==>
gipx () {
    action="git pull";
    echo "$action;";
    $action;

    action="git push";
    echo "$action;";
    $action;
}

# GIT BRANCH 3.0
# COLOR FIXED
# SUBFUNCTIONS FIXED
# LOCAL VARIABLES FIXED
# PRINT COMMAND FIXED
# COMMENTS @TODO
gibr () {
    local action='';
    local pointer='';
    local question='';

    # If we don't have any parameter, I assume we just want to see local branches
    if [[ -z "$1" ]]; then
        action='branch';
    else
        __gi_br_set_command $@;

        __gi_br_set_question;

        if [[ -n "$question" ]]; then
            local answer='';

            read -p "$question" -n 1 -r answer
            echo    # (optional) move to a new line
            if [[ $answer =~ ^[Yy]$ ]]; then
                true;
            else
                return;
            fi
        fi
    fi

    __gi_print_execute;
}

gotomap () {
    basepath=${PWD##*/};
    basepath=${basepath,,};
    fullpath=${PWD};

    tag="<local name=\"$basepath\" path=\"$fullpath\"></local>"
    echo "$tag";
}