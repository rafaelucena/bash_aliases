#############################
function __mapme_file() {
    if [ -z "${1}" ]; then
        echo "${GOTO_MAP_FILE}";
    else
        echo "${GOTO_TEST_FILE}";
    fi
}

function __mapme_generate_tag_path() {
    echo "${PWD}";
}

function __mapme_generate_tag_name() {
    local basePath="${tagPath##*/}";

    local tagName='';
    if [ -n "${1}" ]; then
        tagName="${1}";
    else
        tagName=${basePath,,};
    fi

    echo "${tagName}";
}

function __mapme_insert() {
    local insertTags=$(__mapme_insert_prepare);
    $(__mapme_insert_tags "${insertTags}");

    if [ "${1}" == 'print' ]; then
        local printInsertTags=$(__mapme_insert_prepare_print);
        __mapme_insert_print "${printInsertTags}";
    fi
}

function __mapme_insert_prepare() {
    local tagPath="${tagPath}";
    local tagName="${tagName}";

    echo "<local>\n\t<tag>${tagName}</tag>\n\t<path>${tagPath}</path>\n</local>";
}

function __mapme_insert_prepare_print() {
    local tagPath="${tagPath}";
    local tagName="${tagName}";

    local tagPathPrint="$(dye cyan)<path>$(dye undye)${tagPath}$(dye cyan)</path>$(dye undye)";
    local tagNamePrint="$(dye green)<tag>$(dye undye)${tagName}$(dye green)</tag>$(dye undye)";

    echo "$(dye orange)<local>$(dye undye)\n\t${tagNamePrint}\n\t${tagPathPrint}$(dye orange)\n</local>$(dye undye)";
}

function __mapme_insert_print() {
    echo -e "${1}";
}

function __mapme_insert_tags() {
    local separator='|';

    # REQUIRED
    local insertContent="${1}";

    # OPTIONAL
    local insertAfterLine='';
    if [ -n "${2}" ]; then
        insertAfterLine="${2}";
    else
        insertAfterLine='1';
    fi

    sed -i "${insertAfterLine}a ${insertContent}" $(__mapme_file 'test');
}

#################

function __mapme_replace() {
    local separator='|';

    # REQUIRED
    local find=">${1}<";
    local replace=">${2}<";

    # OPTIONAL
    local line="${3}";

    sed -i -e "${line}s${separator}${find}${separator}${replace}${separator}g" $(__mapme_file);
}

function __mapme_check_exists () {
    local findTag="${1}";
    local findPath="${PWD}";

    local lineTag=$(sed -n "\|<tag>${findTag}.*</tag>|=" $(__mapme_file 'test'));
    local linePath=$(sed -n "\|<path>${findPath}</path>|=" $(__mapme_file 'test'));

    echo "Tag: ${findTag} found at ${lineTag}";
    echo "Path: ${findPath} found at ${linePath}";
}